
תכנון כללי:
שלב א: יצירת מערך של 9 תתי מערכים, כך ש:
1. בכל תת מערך יש כל מספר מ-1 עד 9 פעם אחת בדיוק.
שלב ב: יצירת מערך של 9 תתי מערכים, כך ש:
1. בכל תת מערך יש 9 אובייקטים ריקים של Entry עם textvariable שיוגדר בהמשך.
שלב ג: הגדרת 3 פונקציות בדיקה:
1. שורה: בכל תת מערך יש כל מספר מ1-9 בדיוק פעם אחת.
2. טור: בכל מיקום X במערך יש כל מספר מ1-9 בדיוק פעם אחת.
לדוגמה:
a[1] = 1; b[1] = 3; c[1] = 9 -> True
a[1] = 1; b[1] = 9; c[1] = 9 -> False
3. משבצת:
שלב I: יצירת הקומבינציות - 0-2, 3-5, 6-8 שבכל אחת מהקבוצות יש את כל הקומבינציות של מקומות. למשל:
ary[0][0]; ary[0][1]; ary[0][2]
ary[1][0]; ary[1][1]; ary[1][2]
ary[2][0]; ary[2][1]; ary[2][2]
לוודא שבכל קבוצה כזו יש כל מספר מ1-9 בדיוק פעם אחת.
שמירה של כל קומבינציה בשם box_i
שלב ד: שאפל - עבור כל אחד מתת המערכים ליצור לולאה בעלת שני שלבים:
1. ערבול של כל תת מערך.
2. בדיקה של הפונקציות משלב ג.
שלב ה: בכל אחת מהקבוצות BOX_i להחליף 6 איברים רנדומליים בentry.
שלב ו: עיצוב הלוח.
1. להגדיר פריים בגודל ריבועי כלשהו עם מסגרת בעובי כלשה
2. בתוך כל פריים להכניס את האיברים של BOX בשלשות.
2. בתוך כל פריים להציב את האיברים שבקבוצה. לעצב את הפריים עם
bd=5, relief=RIDGE
3. הצבת כפתור "בדיקה" וכפתור "ניקוי לוח" בפריים הכי תחתון.
שלב ז: בדיקת המשחק
פונקציה א': יוצרת עותקים של המערכים עם הערכים החדשים.
פונקציה ב': בודקת את המערכים החדשים אם הם עונים על הבדיקות שבשלב ג'. הצגת לייבל "ניצחת!" אם הבדיקות יצאו תקינות. אם לא, "נסה שוב".

תכנון מבני:
classes:
1. Board display - contains the code for GUI only.
2. Evaluator - fetches the solved board and checks if it's correct.
3. Matrix file creator - creates a new random board.
4. Sudoku matrix - the matrix as it was imported from a file and manipulations on it (creating a box, a column, etc.)
5. sudoku_Game - takes a matrix as an argument, matches an appropriate GUI and evaluates the user's input.

the GUI needs a matrix. => new_gui = GUI(matrix)
the evaluator takes the output of the GUI and checks its validity. => Evaluator(GUI)

process:
1. a Sudoku_Game is instantiated with a file name.
2. The SudokuGame object calls SudokuMatrix to make a matrix out of the file.
3. the matrix is stored as a SudokuMatrix object.
4. the SudokuGame instantiates a BoardDisplay object using the matrix in SudokuMatrix.